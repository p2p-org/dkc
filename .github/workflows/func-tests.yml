name: Functional Tests

on:
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  functional-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: "Build dkc script"
        uses: actions/setup-go@v4
        with:
          go-version-file: './go.mod'
      - run: go build -o "$path"

      - name: "Install ethdo"
        run: |
          go install "github.com/wealdtech/ethdo@$ethdo_version"
        env:
          ethdo_version: "v1.28.5"
      - name: "Get Original Wallets"
        run: |
          #FIXME set -e is the default bash flag(this is not obvious btw need to fix)
          cd "$path"
          accounts_list=$(ethdo wallet --base-dir ./wallets/old1 accounts --wallet="$wallet_name" | tr '\n' ' ')
          echo -e "\n#  Original Keys"
          for i in $(echo $accounts_list); do
            original_key=$(ethdo account --base-dir ./wallets/old1/ info --account "$wallet_name/$i" | grep -i "Composite public key:" | awk '{print $NF}')
            if [[ -z "$original_key" ]]; then
              echo -e "Account [$i]: ${red}Fail${nc} (len($original_key) == 0)"
              exit 1
            fi

            echo -e "Account [$i]: $original_key"
          done;
          echo "accounts_list=$accounts_list" >> $GITHUB_ENV

      - name: "COMBINE Function Test"
        run: |
          #FIXME set -e is the default bash flag(this is not obvious btw need to fix)
          cd "$path"
          #Prepare config
          sed -i "s,DISTRIBUTED_WALLETS,./wallets,g"
          sed -i "s,ND_WALLETS,./restoredwallets,g"
          #Combine
          ./dkc combine
          #Compare Composite Pubkey from original accounts to newly created accounts
          echo -e "\n#  Combine Tests"
          for i in $(echo "${{ env.accounts_list }}"); do
            original_key=$(ethdo account --base-dir ./wallets/old1/ info --account "$wallet_name/$i" | grep -i "Composite public key:" | awk '{print $NF}')
            restored_key=$(ethdo account --base-dir ./restoredwallets info --account "$restored_wallet/$i" | grep -i "Public key:" | awk '{print $NF}')

            if [[ "$original_key" != "$restored_key" ]]; then
              echo -e "Account [$i]: ${red}Fail${nc} ($original_key != $restored_key)"
              exit 1
            fi

            echo -e "Account [$i]: ${green}OK${nc}"
          done;

      - name: "Split Function Test"
        run: |
          #FIXME set -e is the default bash flag(this is not obvious btw need to fix)
          cd "$path"
          #Prepare config
          sed -i "s,DISTRIBUTED_WALLETS,./newwallets,g"
          sed -i "s,ND_WALLETS,./restoredwallets,g"
          #Split
          ./dkc split
          #Compare Composite Pubkey from original accounts to newly created accounts
          echo -e "\n#  Split Tests"
          for i in $(echo "${{ env.accounts_list }}"); do
            original_key=$(ethdo account --base-dir ./wallets/old1/ info --account "$wallet_name/$i" | grep -i "Composite public key:" | awk '{print $NF}')
            splited_key=$(ethdo account --base-dir ./newwallets/old1/ info --account "$splited_wallet/$i" | grep -i "Composite public key:" | awk '{print $NF}')

            if [[ "$original_key" != "$splited_key" ]]; then
              echo -e "Account [$i]: ${red}Fail${nc} ($original_key != $splited_key)"
              exit 1
            fi

            echo -e "Account [$i]: ${green}OK${nc}"
          done;
    env:
      wallet_name: "DW"
      path: "./.github/examples"
      red: '\033[0;31m'
      green: '\033[0;32m'
      nc: '\033[0m'
