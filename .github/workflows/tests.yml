name: Tests for combine and split logic

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  logic-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: "Build dkc script"
        uses: actions/setup-go@v4
        with:
          go-version-file: './go.mod'
      - run: go build -o "$path"

      - name: "Install ethdo"
        run: |
          go install github.com/wealdtech/ethdo@latest

      - name: "Test combine and split logic"
        run: |
          #FIXME set -e is the default bash flag(this is not obvious btw need to fix)
          cd "$path"

          accounts_list=$(ethdo wallet --base-dir ./wallets/old1 accounts --wallet="$wallet_name")
          #Combine
          echo "Runing combine"
          ./dkc combine
          #Get combined wallet
          restored_wallet=$(ethdo wallet --base-dir ./restoredwallets/ list |head -n 1)
          #Compare Composite Pubkey from original accounts to newly created accounts
          echo "Cheking keys after combine"
          for i in $(echo $accounts_list); do
            original_key=$(ethdo account --base-dir ./wallets/old1/ info --account "$wallet_name/$i" | grep -i "Composite public key:" | awk '{print $NF}')
            restored_key=$(ethdo account --base-dir ./restoredwallets info --account "$restored_wallet/$i" | grep -i "Public key:" | awk '{print $NF}')
            echo "Account: $i"
            echo "OK: $original_key $restored_key"

            if [[ -z "$original_key" ]]; then
              echo "ERROR: Original key is empty"
              exit 1
            fi

            if [[ "$original_key" != "$restored_key" ]]; then
              echo "ERROR: Public Key for Account: $i is incorrect"
              echo "Original: $original_key"
              echo "Restored: $restored_key"
              exit 1
            fi

          done;
          echo "OK: Combine checks"

          #Split
          echo "Running split"
          ./dkc split
          splited_wallet=$(ethdo wallet --base-dir ./newwallets/old1 list |head -n 1)
          #Compare Composite Pubkey from original accounts to newly created accounts
          for i in $(echo $accounts_list); do
          echo "Cheking keys after split"
            original_key=$(ethdo account --base-dir ./wallets/old1/ info --account "$wallet_name/$i" | grep -i "Composite public key:" | awk '{print $NF}')
            splited_key=$(ethdo account --base-dir ./newwallets/old1/ info --account "$splited_wallet/$i" | grep -i "Composite public key:" | awk '{print $NF}')
            echo "OK: $original_key $splited_key"

            if [[ -z "$original_key" ]]; then
              echo "ERROR: Original key is empty"
              exit 1
            fi

            if [[ "$original_key" != "$splited_key" ]]; then
              echo "ERROR: Public Key for Account: $i is incorrect"
              echo "Original: $original_key"
              echo "Restored: $splited_key"
              exit 1
            fi

          done;
          echo "OK: Split checks"
          echo "OK: All checks passed"
    env:
      wallet_name: "DW"
      path: "./.github/examples"
