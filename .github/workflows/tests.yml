name: Tests for combine and split logic

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: "Build dkc script"
        uses: actions/setup-go@v4
        with:
          go-version-file: './go.mod'
      - run: go build -o ./.github/basic/dkc

      - name: "Install ethdo"
        run: |
          go install github.com/wealdtech/ethdo@latest

      - name: "Test combine and split logic"
        run: |
          #FIXME set -e is the default bash flag(this is not obvious btw need to fix)
          cd ./.github/basic/

          accounts_list="1 2 3 4"
          original_wallet_name="DW"
          #Combine
          ./dkc combine
          #Get combined wallet
          restored_wallet=$(ethdo wallet --base-dir ./restoredwallets/ list |head -n 1)
          #Compare Composite Pubkey from original accounts to newly created accounts
          for i in $(echo $accounts_list); do
            local _original_key=$(ethdo account --base-dir ./wallets/old1/ info --account "DW/$i" grep -i "Composite public key:" | awk '{print $NF}')
            local _restored_key=$(ethdo account --base-dir ./restoredwallets info --account "$restored_wallet/$i" grep -i "Public key:" | awk '{print $NF}')

            if [[ -z "$_original_key" ]]; then
              echo "ERROR: Original key is empty"
              exit 1
            fi

            if [[ "$_original_key" != "$_restored_key" ]]; then
              echo "ERROR: Public Key for Account: $i is incorrect"
              echo "Original: $_original_key"
              echo "Restored: $_restored_key"
              exit 1
            fi

          done;

          #Split
          ./dkc split
          splited_wallet=$(ethdo wallet --base-dir ./newwallets/old1 list |head -n 1)
          #Compare Composite Pubkey from original accounts to newly created accounts
          for i in $(echo $accounts_list); do
            local _original_key=$(ethdo account --base-dir ./wallets/old1/ info --account "DW/$i" grep -i "Composite public key:" | awk '{print $NF}')
            local _splited_key=$(ethdo account --base-dir ./newwallets/old1/ info --account "$splited_wallet/$i" grep -i "Composite public key:" | awk '{print $NF}')

            if [[ -z "$_original_key" ]]; then
              echo "ERROR: Original key is empty"
              exit 1
            fi

            if [[ "$_original_key" != "$_splited_key" ]]; then
              echo "ERROR: Public Key for Account: $i is incorrect"
              echo "Original: $_original_key"
              echo "Restored: $_splited_key"
              exit 1
            fi

          done;
